import streamlit as st
import pandas as pd
import random
from collections import defaultdict
from io import BytesIO
import string

# -------------------------------
# тѕЮТюЪсЃЄсЃ╝сѓ┐
# -------------------------------
if "members_df" not in st.session_state:
    members_list = [
            {"тљЇтЅЇ":"уЦљтцф","сЃЉсЃ╝сЃѕ":"Vo","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сЂісЂєсЂЪ","сЃЉсЃ╝сЃѕ":"Vo","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"тцДУЦ┐уюЪудЈ","сЃЉсЃ╝сЃѕ":"Vo","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"уЙјтњ▓","сЃЉсЃ╝сЃѕ":"Vo","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"СИГТЮЉуј▓тЦѕ","сЃЉсЃ╝сЃѕ":"Vo","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"nao","сЃЉсЃ╝сЃѕ":"Vo","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"сЃЈсЃісЃј","сЃЉсЃ╝сЃѕ":"Vo","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"сЂІсЂфсЂЪ","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"сѓђсЂЊсѓђсЂЊ","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"С║ЋСИіТХ╝С╣Ъ","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сѓісЂф","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"тљЉтъБтєЁтЁЅ","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"уХЙТќЌ","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"сЂЊсЂєсЂЪ","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сЂЙсѓє","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"ТаЌТъЌ","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сЂЙсЂфсЂІ","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"сЂ╗сЂ«","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"ухљТёЏ","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"тёфжЄї","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сЂ»сѓІсЂе","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"ТАЉТЮЉ","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"mizu","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"сѓЈсЂЪсЂ╣сЂДсЂЎ","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"сѓісѓЄсЂєсЂЎсЂЉ","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"тцДтњї","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"СЙЉуЪЦ","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"сЂЋсЂІсЂёсѓё","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сЂѓсѓЊсЂЕсЂєсѓісѓЄсЂєсЂї","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"Mizuki","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"жўфТюг","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сЂёсЂЪсѓѓсЂА","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"т«ЈтцфжЃј","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"ухљУЈю","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"сѓёсЂБсЂЎсЃ╝","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сѓєсЂєсЂф","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"сЂЌсѓЊсЂ«сЂЎсЂЉ","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"уј▓жБЏ","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"сЂЇсЂЌсЂѓсѓёсЂе","сЃЉсЃ╝сЃѕ":"Key","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"Chisaki","сЃЉсЃ╝сЃѕ":"Key","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"Perry","сЃЉсЃ╝сЃѕ":"Key","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"сЂ▓сѓЄсѓі","сЃЉсЃ╝сЃѕ":"Key","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"сЂЙсЂцсѓѓсЂесЂЊсЂєсЂЇ","сЃЉсЃ╝сЃѕ":"Key","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сЂѓсЂёсЂ┐","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"уЉЏжЪ│","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"сЂѓсЂцсЂЌ","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"сЂѓсѓёсЂІ","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"ТГїжЄјтцЕТхи","сЃЉсЃ╝сЃѕ":"Key","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сЂісЃ╝сЂё","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"сЂісЂЈсЂЉсЂёсЂе","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сЂїсЂё","сЃЉсЃ╝сЃѕ":"Vo","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"сЂІсЂ╗","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"сЂЊсЂЎсЂїсЂ»сЂф","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"СйљУЌцУБЋждг","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сЂЪсЂІсЂцсЂљ","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"УЙ╗ТюгуЏ┤тЊЅ","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"тцЈуХИ","сЃЉсЃ╝сЃѕ":"Key","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"УЦ┐ућ░Сй│уЦљ","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"ТъЌУјЅтГљ","сЃЉсЃ╝сЃѕ":"Key","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сЂ»сѓІсѓё","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"ТЪі№╝ѕсЂЌсѓЁсЂє№╝Ѕ","сЃЉсЃ╝сЃѕ":"Dr","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сЂ┐сЂІсЂЊ","сЃЉсЃ╝сЃѕ":"Vo","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"уЙјтњ▓2","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"сѓісЃ╝сЂЙ","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"сѓісѓЁсЂєсЂИсЂё","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"Т┐▒ућ░сѓісѓЄсЂє","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":3,"ухїжеЊсЃгсЃЎсЃФ":"СИГу┤џ"},
        {"тљЇтЅЇ":"сѓІсЂф","сЃЉсЃ╝сЃѕ":"Key","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"kei","сЃЉсЃ╝сЃѕ":"Vo","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"yuzuki","сЃЉсЃ╝сЃѕ":"Key","тГдт╣┤":1,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"тЂЦС║ї","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"Kazuma","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":2,"ухїжеЊсЃгсЃЎсЃФ":"тѕЮу┤џ"},
        {"тљЇтЅЇ":"сЂЎсЂфсЂі","сЃЉсЃ╝сЃѕ":"Gt","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"},
        {"тљЇтЅЇ":"жФўтјЪ","сЃЉсЃ╝сЃѕ":"Ba","тГдт╣┤":4,"ухїжеЊсЃгсЃЎсЃФ":"СИіу┤џ"}
        ]
    st.session_state.members_df = pd.DataFrame(members_list)
    st.session_state.selected = {idx: False for idx in range(len(members_list))}

# -------------------------------
# сѓхсѓцсЃЅсЃљсЃ╝сЂДсЃџсЃ╝сѓИжЂИТіъ
# -------------------------------
st.sidebar.title("сЃџсЃ╝сѓИжЂИТіъ")
page = st.sidebar.radio("сЃџсЃ╝сѓИ", ["сЃљсЃ│сЃЅСйюТѕљ", "сЃЕсѓцсЃќсЃЈсѓдсѓ╣С║ѕу┤ёсЃ╗ТќЎжЄЉУеѕу«Ќ"])

# -------------------------------
# сЃљсЃ│сЃЅСйюТѕљсЃџсЃ╝сѓИ
# -------------------------------
if page == "сЃљсЃ│сЃЅСйюТѕљ":
    st.title("­ЪјИ сЃљсЃ│сЃЅСйюТѕљсѓбсЃЌсЃф")

    df = st.session_state.members_df.copy()
    experience_order = {"тѕЮу┤џ": 1, "СИГу┤џ": 2, "СИіу┤џ": 3}
    df["ухїжеЊжає"] = df["ухїжеЊсЃгсЃЎсЃФ"].map(experience_order)

    # тГдт╣┤жаєсЃ╗ухїжеЊжаєсЃ╗сЃЉсЃ╝сЃѕжаєсЂДУАеуц║
    df_sorted = df.sort_values(by=["тГдт╣┤", "ухїжеЊжає", "сЃЉсЃ╝сЃѕ"], ascending=[True, False, True]).reset_index(drop=True)

    st.subheader("­Ъјц тЈѓтіаУђЁсЃфсѓ╣сЃѕ№╝ѕтГдт╣┤сЃ╗ухїжеЊсЃ╗сЃЉсЃ╝сЃѕжає№╝Ѕ")
    cols = st.columns(3)
    for i, row in df_sorted.iterrows():
        col_idx = i % 3
        key = f"chk_{row['тљЇтЅЇ']}"
        st.session_state.selected[row.name] = cols[col_idx].checkbox(
            f"{row['тљЇтЅЇ']}№╝ѕ{row['сЃЉсЃ╝сЃѕ']}сЃ╗{row['тГдт╣┤']}т╣┤сЃ╗{row['ухїжеЊсЃгсЃЎсЃФ']}№╝Ѕ",
            value=st.session_state.selected.get(row.name, False),
            key=key
        )
    total_selected = sum(st.session_state.selected.values())
    st.markdown(f"### РюЁ жЂИТіъС║║ТЋ░№╝џ{total_selected}С║║")

    # -------------------------------
    # сЃљсЃ│сЃЅСйюТѕљжќбТЋ░
    # -------------------------------
    def create_bands(df, selected):
        selected_members = df[[selected[i] for i in df.index]].copy()
        if selected_members.empty:
            st.warning("тЈѓтіаУђЁсЂїжЂИТіъсЂЋсѓїсЂдсЂёсЂЙсЂЏсѓЊ")
            return None

        max_per_band = {"Ba": 2, "Dr": 2}
        parts = defaultdict(list)
        for _, row in selected_members.iterrows():
            parts[row["сЃЉсЃ╝сЃѕ"]].append(row)

        # сЃљсЃ│сЃЅТЋ░сЂ«Уеѕу«Ќ
        band_counts = []
        for part_name, members_list in parts.items():
            if part_name in max_per_band:
                band_counts.append((len(members_list) + max_per_band[part_name] - 1) // max_per_band[part_name])
            else:
                band_counts.append(len(members_list))
        num_bands = min(band_counts)
        bands = [defaultdict(list) for _ in range(num_bands)]

        # тљёсЃЉсЃ╝сЃѕсѓњсЃљсЃ│сЃЅсЂФтЅ▓сѓіТї»сѓі
        for part_name, members_list in parts.items():
            # ухїжеЊжаєсЂДсѓисЃБсЃЃсЃЋсЃФ
            if part_name in ["Gt", "Ba", "Dr"]:
                high = [m for m in members_list if m["ухїжеЊсЃгсЃЎсЃФ"] == "СИіу┤џ"]
                mid = [m for m in members_list if m["ухїжеЊсЃгсЃЎсЃФ"] == "СИГу┤џ"]
                low = [m for m in members_list if m["ухїжеЊсЃгсЃЎсЃФ"] == "тѕЮу┤џ"]
                random.shuffle(high); random.shuffle(mid); random.shuffle(low)
                members_sorted = high + mid + low
            else:
                members_sorted = members_list.copy()
                random.shuffle(members_sorted)

            band_idx = 0
            for member in members_sorted:
                attempts = 0
                while attempts < num_bands:
                    if part_name in max_per_band and len(bands[band_idx][part_name]) >= max_per_band[part_name]:
                        band_idx = (band_idx + 1) % num_bands
                        attempts += 1
                    else:
                        bands[band_idx][part_name].append(member["тљЇтЅЇ"])
                        band_idx = (band_idx + 1) % num_bands
                        break
                else:
                    bands[0][part_name].append(member["тљЇтЅЇ"])
        return bands

    # -------------------------------
    # сЃљсЃ│сЃЅСйюТѕљсЃѕсЃфсѓгсЃ╝
    # -------------------------------
    if st.button("­Ъјх сЃљсЃ│сЃЅСйюТѕљ"):
        bands_result = create_bands(st.session_state.members_df, st.session_state.selected)
        if bands_result:
            st.session_state.bands_result = bands_result

    # ухљТъюУАеуц║
    if "bands_result" in st.session_state and st.session_state.bands_result:
        st.subheader("­ЪјХ сЃљсЃ│сЃЅтѕєсЂЉухљТъю")
        result_df = pd.DataFrame(columns=["Vo", "Gt", "Ba", "Dr", "Key"])
        for i, band in enumerate(st.session_state.bands_result):
            band_label = "Band " + string.ascii_uppercase[i]
            row = {col: ", ".join(band.get(col, ["№╝ѕуЕ║сЂЇ№╝Ѕ"])) for col in ["Vo", "Gt", "Ba", "Dr", "Key"]}
            result_df.loc[band_label] = row
        st.table(result_df)

        # ExcelсЃђсѓдсЃ│сЃГсЃ╝сЃЅ
        towrite = BytesIO()
        result_df.to_excel(towrite, index=True, sheet_name="Bands", engine="openpyxl")
        towrite.seek(0)
        st.download_button(
            "Excel сЃђсѓдсЃ│сЃГсЃ╝сЃЅ",
            data=towrite,
            file_name="bands.xlsx",
            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        )

# -------------------------------
# сЃЕсѓцсЃќсЃЈсѓдсѓ╣С║ѕу┤ёсЃ╗ТќЎжЄЉУеѕу«ЌсЃџсЃ╝сѓИ
# -------------------------------
elif page == "сЃЕсѓцсЃќсЃЈсѓдсѓ╣С║ѕу┤ёсЃ╗ТќЎжЄЉУеѕу«Ќ":
    st.title("­Ъјц сЃЕсѓцсЃќсЃЈсѓдсѓ╣С║ѕу┤ёсЃ╗ТќЎжЄЉУеѕу«Ќ")

    livehouses = ["CLUB GATE", "Shibuya Milkyway", "жЏБТ│бсЃГсѓ▒сЃЃсЃё"]
    selected_house = st.selectbox("сЃЕсѓцсЃќсЃЈсѓдсѓ╣сѓњжЂИТіъ", livehouses)

    day_options = ["т╣│ТЌЦ", "тюЪТЏю", "ТЌЦТЏю"]
    selected_day = st.selectbox("ТЌЦуеІсѓњжЂИТіъ", day_options)

    hours = st.number_input("тѕЕућеТЎѓжќЊ№╝ѕТЎѓжќЊ№╝Ѕ", min_value=1, max_value=12, value=2)

    # у░АТўЊТќЎжЄЉУеѕу«Ќ
    base_price = 20000  # т╣│ТЌЦтЪ║ТюгТќЎжЄЉ
    if selected_day in ["тюЪТЏю", "ТЌЦТЏю"]:
        base_price = int(base_price * 1.5)
    total_price = base_price * hours
    st.markdown(f"### ­Ъњ░ тљѕУеѕТќЎжЄЉ: {total_price}тєє")
